setcps (110/120)

hush


do 
    let g1 = 0
    let g2 = 0
    let g3 = 0
    let g4 = 0
    let g5 = 0
    let g6 = 0
    let g1 = 1.3
    let g2 = 1
    let g3 = 1
    let g4 = 1
    let g5 = 1
    let g6 = 1
    let brk = 16
    let bit = 0
    d1
        $ every brk ( # s "")
        $ loopAt "<4>"
        -- $ palindrome
        $ jux rev
        -- $ off 0.125 (# gain (g1 / 8))
        -- $ off 0.25 (# gain (g1 / 4))
        -- $ off 0.25 (|+ 4)
        $ struct ("t(1,16)")
        $ n "[0 1 2 3 4 5 6 7]/4"
        # s "dio"
        # attack "<0.2>"
        # release "<4>"
        # vowel "a o u"
        # pan sine
        -- # coarse (bit)
        # hpf 1500
        # lpf 6000
        # gain g1
    d2
        $ every brk ( # s "")
        $ palindrome
        $ off 0.25 (|+ 12)
        $ struct (iter 8 "t(4,1)")
        $ n (scale "harmonicMinor" "0 .. 7")
        # s "bfbass"
        # release "<1>"
        # coarse bit
        # gain g2
    d3
        -- $ off 0 (|+ 7)
        $ struct (iter 8 "t(6,16)")
        $ n (scale "harmonicMinor" "0 .. 7")
        # stack [
            s "bsteel" # gain (g3) # attack "<0.5>" # release "<4>",
            s "hardbass" # gain (g3) # attack "<0.5>" # release "<4>"
        ]
        # coarse bit
        -- # hpf 4000
        -- # lpf 6000
    d4 
        $ every brk ( # s "")
        $ struct (iter 8 "t(4,1)")
        $ n "0"
        # s "btrap"
        # attack "<0.01>"
        # release "<1>"
        # lpf 8000
        # coarse bit
        # gain g4
    d5 
        $ every brk ( # s "")
        $ struct (iter 1 "t(1,1)")
        $ chop 4
        $ n "2"
        # s "btrap"
        # attack "<0.2>"
        # release "<1>"
        # lpf 6000
        # coarse bit
        # gain g5
    d6 
        $ every brk ( # s "")
        $ chunk 6 (|+ 2)
        $ struct (iter 2 "t(8,1)")
        $ n "6"
        # s "btrap"
        # hpf 12000
        # coarse bit
        # gain g6